version: '1'
catalog:
  name: "print"
  version: "0.0.1"
  description: "print is a universal Binary Repository Manager"
  questions:
    - variable: "print_VERSION"
      label: "Version"
      description: |
        Select the print server version. OSS or PRO
      required: true
      default: "OSS"
      type: enum
      options:
        - OSS
        - PRO
    - variable: "PUBLISH_SCHEMA"
      description: "Publish schema" 
      label: "Publish schema:"
      required: true
      default: "https"
      type: "enum"
      options:
        - http
        - https
    - variable: "PUBLISH_NAME"
      label: "Publish name"
      description: |
        Set publish fqdn for print server.
      required: true
      type: "string"
      default: "print.local"
    - variable: "PUBLISH_PORT"
      label: "Publish port"
      description: |
        Set port if you want publish external port for print server.
      required: true
      type: "int"
      default: 8081
    - variable: "SSL_CERT"
      description: "Select SSL certificate." 
      label: "SSL certificate:"
      required: true
      default: ""
      type: "certificate"
    - variable: "EXTRA_JAVA_OPTIONS"
      label: "Extra Java options"
      description: |
      type: "string"
      default: ""
    - variable: "VOLUME_DRIVER"
      type: "string"
      label: "Volume driver for print data"
      description: |
        Specifiy docker volume driver to use
      default: "local"
      required: true
services:
  print-lb:
    scale: 1
    lb_config:
      certs: []
      default_cert: ${SSL_CERT}
      port_rules:
      - protocol: ${PUBLISH_SCHEMA}
        service: print-rp
        source_port: ${PUBLISH_PORT}
        target_port: ${PUBLISH_PORT}
    health_check:
      response_timeout: 2000
      healthy_threshold: 2
      port: 42
      unhealthy_threshold: 3
  print-rp:
    scale: 1
    retain_ip: true
    health_check:
      port: ${PUBLISH_PORT}
      interval: 5000
      unhealthy_threshold: 3
      request_line: 'GET / HTTP/1.0'
      healthy_threshold: 2
      response_timeout: 5000
  print:
    scale: 1
    retain_ip: true
    health_check:
      port: 8081
      interval: 5000
      unhealthy_threshold: 3
      request_line: 'GET / HTTP/1.0'
      healthy_threshold: 2
      response_timeout: 5000
